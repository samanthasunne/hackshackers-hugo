box: debian
build:
    steps:
        - script:
            name: check if disabled
            code: |
                if [ ! -z ${DISABLE+x} ]; then
                    error "Wercker is currently disabled."
                    exit 1;
                fi
        - script:
            name: install git
            code: |
                apt-get update
                apt-get install git -y
        - add-ssh-key:
            keyname: HH_BUILD
            host: github.com
        - add-to-known_hosts:
            hostname: github.com
            fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
        - script:
            name: initialize git submodules
            code: |
                git submodule update --init --recursive

deploy:
    steps:
        - arjen/hugo-build@1.13.1:
            version: "0.17"
            config: $HH_CONFIG_FILENAME
        - script:
            name: delete data files
            code: |
                rm -rf ./public/data
        - s3sync:
            key-id: $HH_ALLEY_AWS_KEY
            key-secret: $HH_ALLEY_AWS_SECRET
            bucket-url: $HH_AWS_BUCKET
            source-dir: ./public
    after-steps:
        - install-packages:
            packages: ruby
        - wantedly/pretty-slack-notify@0.3.4:
            webhook_url: $SLACK_WEBHOOK_URL
            passed_message: Check out $DEPLOY_URL

update-content-submodule:
    steps:
        - script:
            name: check if disabled
            code: |
                if [ ! -z ${DISABLE+x} ]; then
                    error "Wercker is currently disabled."
                    exit 1;
                fi
        - script:
            name: install git
            code: |
                apt-get update
                apt-get install git -y
        - add-ssh-key:
            keyname: HH_BUILD
            host: github.com
        - add-to-known_hosts:
            hostname: github.com
            fingerprint: 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48
        - script:
            name: initialize git submodules
            code: |
                git submodule update --init --recursive
        - script:
            name: merge new submodule ref into master & push
            code: |
                git fetch origin
                git checkout master
                git pull --no-edit origin master
                git config --global user.email "josh+wercker@alleyinteractive.com"
                git merge --no-ff origin/auto-update-content
                git push origin master

        - script:
            name: merge master into production & push
            code: |
                git checkout -b production origin/production
                git merge --no-ff master
                git push origin production

        - script:
            name: delete remote auto-update-content branch
            code: |
                git branch -dr origin/auto-update-content
